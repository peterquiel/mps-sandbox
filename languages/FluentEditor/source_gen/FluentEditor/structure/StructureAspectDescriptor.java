package FluentEditor.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAliasRoot = createDescriptorForAliasRoot();
  /*package*/ final ConceptDescriptor myConceptAndLogicalOperator = createDescriptorForAndLogicalOperator();
  /*package*/ final ConceptDescriptor myConceptAndOprator = createDescriptorForAndOprator();
  /*package*/ final ConceptDescriptor myConceptAwesomeStructure = createDescriptorForAwesomeStructure();
  /*package*/ final ConceptDescriptor myConceptBlankLine = createDescriptorForBlankLine();
  /*package*/ final ConceptDescriptor myConceptBlankWord = createDescriptorForBlankWord();
  /*package*/ final ConceptDescriptor myConceptBlock = createDescriptorForBlock();
  /*package*/ final ConceptDescriptor myConceptBlockContent = createDescriptorForBlockContent();
  /*package*/ final ConceptDescriptor myConceptBlockRoot = createDescriptorForBlockRoot();
  /*package*/ final ConceptDescriptor myConceptBoldWord = createDescriptorForBoldWord();
  /*package*/ final ConceptDescriptor myConceptBooleanCollection = createDescriptorForBooleanCollection();
  /*package*/ final ConceptDescriptor myConceptCollectionSepartorRoot = createDescriptorForCollectionSepartorRoot();
  /*package*/ final ConceptDescriptor myConceptContent = createDescriptorForContent();
  /*package*/ final ConceptDescriptor myConceptDoc = createDescriptorForDoc();
  /*package*/ final ConceptDescriptor myConceptDocLine = createDescriptorForDocLine();
  /*package*/ final ConceptDescriptor myConceptEmptyBlockShouldLookEmptyBlock = createDescriptorForEmptyBlockShouldLookEmptyBlock();
  /*package*/ final ConceptDescriptor myConceptEmptyBlockShouldLookEmptyRoot = createDescriptorForEmptyBlockShouldLookEmptyRoot();
  /*package*/ final ConceptDescriptor myConceptEmptyLine = createDescriptorForEmptyLine();
  /*package*/ final ConceptDescriptor myConceptEmptyLineReplacementRoot = createDescriptorForEmptyLineReplacementRoot();
  /*package*/ final ConceptDescriptor myConceptHierachy = createDescriptorForHierachy();
  /*package*/ final ConceptDescriptor myConceptILine = createDescriptorForILine();
  /*package*/ final ConceptDescriptor myConceptIWord = createDescriptorForIWord();
  /*package*/ final ConceptDescriptor myConceptIndentRoot = createDescriptorForIndentRoot();
  /*package*/ final ConceptDescriptor myConceptLettersWord = createDescriptorForLettersWord();
  /*package*/ final ConceptDescriptor myConceptLine = createDescriptorForLine();
  /*package*/ final ConceptDescriptor myConceptLogicalOperator = createDescriptorForLogicalOperator();
  /*package*/ final ConceptDescriptor myConceptMatchingBracesRoot = createDescriptorForMatchingBracesRoot();
  /*package*/ final ConceptDescriptor myConceptNewLine = createDescriptorForNewLine();
  /*package*/ final ConceptDescriptor myConceptNonBlockingTest = createDescriptorForNonBlockingTest();
  /*package*/ final ConceptDescriptor myConceptNumberWord = createDescriptorForNumberWord();
  /*package*/ final ConceptDescriptor myConceptOrLogicalOperator = createDescriptorForOrLogicalOperator();
  /*package*/ final ConceptDescriptor myConceptOrOperator = createDescriptorForOrOperator();
  /*package*/ final ConceptDescriptor myConceptPrepend = createDescriptorForPrepend();
  /*package*/ final ConceptDescriptor myConceptPrependKeywordRoot = createDescriptorForPrependKeywordRoot();
  /*package*/ final ConceptDescriptor myConceptProperty = createDescriptorForProperty();
  /*package*/ final ConceptDescriptor myConceptPunctuation = createDescriptorForPunctuation();
  /*package*/ final ConceptDescriptor myConceptRichTextRoot = createDescriptorForRichTextRoot();
  /*package*/ final ConceptDescriptor myConceptSimpleContent = createDescriptorForSimpleContent();
  /*package*/ final ConceptDescriptor myConceptStringCollection = createDescriptorForStringCollection();
  /*package*/ final ConceptDescriptor myConceptStructure = createDescriptorForStructure();
  /*package*/ final ConceptDescriptor myConceptSubMenuExpression = createDescriptorForSubMenuExpression();
  /*package*/ final ConceptDescriptor myConceptSubMenuOperand = createDescriptorForSubMenuOperand();
  /*package*/ final ConceptDescriptor myConceptSubMenuOperator = createDescriptorForSubMenuOperator();
  /*package*/ final ConceptDescriptor myConceptSubstitutionMenuRoot = createDescriptorForSubstitutionMenuRoot();
  /*package*/ final ConceptDescriptor myConceptSuperStructure = createDescriptorForSuperStructure();
  /*package*/ final ConceptDescriptor myConceptTextLine = createDescriptorForTextLine();
  /*package*/ final ConceptDescriptor myConceptWord = createDescriptorForWord();
  /*package*/ final ConceptDescriptor myConceptWordOperand = createDescriptorForWordOperand();
  /*package*/ final ConceptDescriptor myConceptWordThatIsWrapped = createDescriptorForWordThatIsWrapped();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeKindType = new ConstrainedStringDatatypeDescriptorImpl(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x366702a83bc0e3c7L, "KindType", "r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/3920104922229564359", "[A-Z]^{0,1}");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeWordType = new ConstrainedStringDatatypeDescriptorImpl(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da102d0L, "WordType", "r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/7016667275740644048", "\\w+");
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeazAZ_Letters = new ConstrainedStringDatatypeDescriptorImpl(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e418b45b72L, "azAZ_Letters", "r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6394025033533250418", "[a-z|A-Z]*");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAliasRoot, myConceptAndLogicalOperator, myConceptAndOprator, myConceptAwesomeStructure, myConceptBlankLine, myConceptBlankWord, myConceptBlock, myConceptBlockContent, myConceptBlockRoot, myConceptBoldWord, myConceptBooleanCollection, myConceptCollectionSepartorRoot, myConceptContent, myConceptDoc, myConceptDocLine, myConceptEmptyBlockShouldLookEmptyBlock, myConceptEmptyBlockShouldLookEmptyRoot, myConceptEmptyLine, myConceptEmptyLineReplacementRoot, myConceptHierachy, myConceptILine, myConceptIWord, myConceptIndentRoot, myConceptLettersWord, myConceptLine, myConceptLogicalOperator, myConceptMatchingBracesRoot, myConceptNewLine, myConceptNonBlockingTest, myConceptNumberWord, myConceptOrLogicalOperator, myConceptOrOperator, myConceptPrepend, myConceptPrependKeywordRoot, myConceptProperty, myConceptPunctuation, myConceptRichTextRoot, myConceptSimpleContent, myConceptStringCollection, myConceptStructure, myConceptSubMenuExpression, myConceptSubMenuOperand, myConceptSubMenuOperator, myConceptSubstitutionMenuRoot, myConceptSuperStructure, myConceptTextLine, myConceptWord, myConceptWordOperand, myConceptWordThatIsWrapped);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AliasRoot:
        return myConceptAliasRoot;
      case LanguageConceptSwitch.AndLogicalOperator:
        return myConceptAndLogicalOperator;
      case LanguageConceptSwitch.AndOprator:
        return myConceptAndOprator;
      case LanguageConceptSwitch.AwesomeStructure:
        return myConceptAwesomeStructure;
      case LanguageConceptSwitch.BlankLine:
        return myConceptBlankLine;
      case LanguageConceptSwitch.BlankWord:
        return myConceptBlankWord;
      case LanguageConceptSwitch.Block:
        return myConceptBlock;
      case LanguageConceptSwitch.BlockContent:
        return myConceptBlockContent;
      case LanguageConceptSwitch.BlockRoot:
        return myConceptBlockRoot;
      case LanguageConceptSwitch.BoldWord:
        return myConceptBoldWord;
      case LanguageConceptSwitch.BooleanCollection:
        return myConceptBooleanCollection;
      case LanguageConceptSwitch.CollectionSepartorRoot:
        return myConceptCollectionSepartorRoot;
      case LanguageConceptSwitch.Content:
        return myConceptContent;
      case LanguageConceptSwitch.Doc:
        return myConceptDoc;
      case LanguageConceptSwitch.DocLine:
        return myConceptDocLine;
      case LanguageConceptSwitch.EmptyBlockShouldLookEmptyBlock:
        return myConceptEmptyBlockShouldLookEmptyBlock;
      case LanguageConceptSwitch.EmptyBlockShouldLookEmptyRoot:
        return myConceptEmptyBlockShouldLookEmptyRoot;
      case LanguageConceptSwitch.EmptyLine:
        return myConceptEmptyLine;
      case LanguageConceptSwitch.EmptyLineReplacementRoot:
        return myConceptEmptyLineReplacementRoot;
      case LanguageConceptSwitch.Hierachy:
        return myConceptHierachy;
      case LanguageConceptSwitch.ILine:
        return myConceptILine;
      case LanguageConceptSwitch.IWord:
        return myConceptIWord;
      case LanguageConceptSwitch.IndentRoot:
        return myConceptIndentRoot;
      case LanguageConceptSwitch.LettersWord:
        return myConceptLettersWord;
      case LanguageConceptSwitch.Line:
        return myConceptLine;
      case LanguageConceptSwitch.LogicalOperator:
        return myConceptLogicalOperator;
      case LanguageConceptSwitch.MatchingBracesRoot:
        return myConceptMatchingBracesRoot;
      case LanguageConceptSwitch.NewLine:
        return myConceptNewLine;
      case LanguageConceptSwitch.NonBlockingTest:
        return myConceptNonBlockingTest;
      case LanguageConceptSwitch.NumberWord:
        return myConceptNumberWord;
      case LanguageConceptSwitch.OrLogicalOperator:
        return myConceptOrLogicalOperator;
      case LanguageConceptSwitch.OrOperator:
        return myConceptOrOperator;
      case LanguageConceptSwitch.Prepend:
        return myConceptPrepend;
      case LanguageConceptSwitch.PrependKeywordRoot:
        return myConceptPrependKeywordRoot;
      case LanguageConceptSwitch.Property:
        return myConceptProperty;
      case LanguageConceptSwitch.Punctuation:
        return myConceptPunctuation;
      case LanguageConceptSwitch.RichTextRoot:
        return myConceptRichTextRoot;
      case LanguageConceptSwitch.SimpleContent:
        return myConceptSimpleContent;
      case LanguageConceptSwitch.StringCollection:
        return myConceptStringCollection;
      case LanguageConceptSwitch.Structure:
        return myConceptStructure;
      case LanguageConceptSwitch.SubMenuExpression:
        return myConceptSubMenuExpression;
      case LanguageConceptSwitch.SubMenuOperand:
        return myConceptSubMenuOperand;
      case LanguageConceptSwitch.SubMenuOperator:
        return myConceptSubMenuOperator;
      case LanguageConceptSwitch.SubstitutionMenuRoot:
        return myConceptSubstitutionMenuRoot;
      case LanguageConceptSwitch.SuperStructure:
        return myConceptSuperStructure;
      case LanguageConceptSwitch.TextLine:
        return myConceptTextLine;
      case LanguageConceptSwitch.Word:
        return myConceptWord;
      case LanguageConceptSwitch.WordOperand:
        return myConceptWordOperand;
      case LanguageConceptSwitch.WordThatIsWrapped:
        return myConceptWordThatIsWrapped;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myCSDatatypeKindType, myCSDatatypeWordType, myCSDatatypeazAZ_Letters);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAliasRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "AliasRoot", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x6409f53087b6e722L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/7208562267367335714");
    b.version(2);
    b.aggregate("doc", 0x46c894612c37b5f9L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5ffL).optional(false).ordered(true).multiple(false).origin("5100489723071673849").done();
    b.aggregate("expresion", 0x6409f53087b6e723L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x6409f53087b6e726L).optional(false).ordered(true).multiple(true).origin("7208562267367335715").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAndLogicalOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "AndLogicalOperator", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c35ead0L);
    b.class_(false, false, false);
    b.super_("FluentEditor.structure.LogicalOperator", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x6409f53087b6e726L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723071556304");
    b.version(2);
    b.alias("and");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAndOprator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "AndOprator", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da102cbL);
    b.class_(false, false, false);
    b.super_("FluentEditor.structure.SubMenuOperator", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da102c5L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/7016667275740644043");
    b.version(2);
    b.alias("and");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAwesomeStructure() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "AwesomeStructure", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3fb9eeL);
    b.class_(false, false, false);
    b.super_("FluentEditor.structure.Structure", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3fb9e2L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723072199150");
    b.version(2);
    b.property("content", 0x46c894612c3fb9efL).type(PrimitiveTypeId.STRING).origin("5100489723072199151").done();
    b.alias("awesome");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBlankLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "BlankLine", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461b5L);
    b.class_(false, false, false);
    b.parent(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461b4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6394025033529057717");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBlankWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "BlankWord", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461e0L);
    b.class_(false, false, false);
    b.parent(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461c2L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6394025033529057760");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "Block", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x6409f53087b16c5dL);
    b.class_(false, false, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/7208562267366976605");
    b.version(2);
    b.aggregate("lines", 0x6409f53087b16c6dL).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x6409f53087b16c65L).optional(false).ordered(true).multiple(true).origin("7208562267366976621").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBlockContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "BlockContent", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x1571a79012681332L);
    b.class_(false, false, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/1545200384390730546");
    b.version(2);
    b.property("content", 0x1571a79012681333L).type(PrimitiveTypeId.STRING).origin("1545200384390730547").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBlockRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "BlockRoot", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x152366698d5110baL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/1523173702509859002");
    b.version(2);
    b.aggregate("doc", 0x46c894612c37b5fcL).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5ffL).optional(false).ordered(true).multiple(false).origin("5100489723071673852").done();
    b.aggregate("blocks", 0x6409f53087b16c5eL).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x6409f53087b16c5dL).optional(false).ordered(true).multiple(true).origin("7208562267366976606").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBoldWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "BoldWord", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461bfL);
    b.class_(false, false, false);
    b.super_("FluentEditor.structure.Word", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461bcL);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6394025033529057727");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBooleanCollection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "BooleanCollection", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c44e5eeL);
    b.class_(false, false, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723072538094");
    b.version(2);
    b.property("property", 0x46c894612c44e5efL).type(PrimitiveTypeId.BOOLEAN).origin("5100489723072538095").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCollectionSepartorRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "CollectionSepartorRoot", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c439b22L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723072453410");
    b.version(2);
    b.aggregate("stringCollection", 0x46c894612c439b28L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c439b25L).optional(false).ordered(true).multiple(true).origin("5100489723072453416").done();
    b.aggregate("booleanCollection", 0x46c894612c44e5f1L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c44e5eeL).optional(false).ordered(true).multiple(true).origin("5100489723072538097").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "Content", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c472441L);
    b.class_(false, true, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723072685121");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDoc() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "Doc", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5ffL);
    b.class_(false, false, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723071673855");
    b.version(2);
    b.aggregate("doclines", 0x46c894612c37b600L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5f6L).optional(true).ordered(true).multiple(true).origin("5100489723071673856").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDocLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "DocLine", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5f6L);
    b.class_(false, false, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723071673846");
    b.version(2);
    b.property("docLine", 0x46c894612c37b5f7L).type(PrimitiveTypeId.STRING).origin("5100489723071673847").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmptyBlockShouldLookEmptyBlock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "EmptyBlockShouldLookEmptyBlock", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x1571a79012681331L);
    b.class_(false, false, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/1545200384390730545");
    b.version(2);
    b.aggregate("contents", 0x1571a7901268133aL).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x1571a79012681332L).optional(true).ordered(true).multiple(true).origin("1545200384390730554").done();
    b.alias("block");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmptyBlockShouldLookEmptyRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "EmptyBlockShouldLookEmptyRoot", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x1571a79012681327L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/1545200384390730535");
    b.version(2);
    b.aggregate("dock", 0x1571a79012681391L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5ffL).optional(false).ordered(true).multiple(false).origin("1545200384390730641").done();
    b.aggregate("blocks", 0x1571a79012681393L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x1571a79012681331L).optional(true).ordered(true).multiple(true).origin("1545200384390730643").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmptyLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "EmptyLine", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3fb9e3L);
    b.class_(false, false, false);
    b.super_("FluentEditor.structure.Structure", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3fb9e2L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723072199139");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEmptyLineReplacementRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "EmptyLineReplacementRoot", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3fb9dfL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723072199135");
    b.version(2);
    b.aggregate("structures", 0x46c894612c3fb9e4L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3fb9e2L).optional(false).ordered(true).multiple(true).origin("5100489723072199140").done();
    b.aggregate("doc", 0x46c894612c3fb9e6L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5ffL).optional(false).ordered(true).multiple(false).origin("5100489723072199142").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHierachy() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "Hierachy", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c47243dL);
    b.class_(false, false, false);
    b.super_("FluentEditor.structure.Content", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c472441L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723072685117");
    b.version(2);
    b.aggregate("content", 0x46c894612c472442L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c472441L).optional(true).ordered(true).multiple(true).origin("5100489723072685122").done();
    b.alias("hierarchy");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForILine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "ILine", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461b4L);
    b.interface_();
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6394025033529057716");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "IWord", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461c2L);
    b.interface_();
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6394025033529057730");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIndentRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "IndentRoot", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3a500cL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723071844364");
    b.version(2);
    b.aggregate("allIndents", 0x46c894612c3a5012L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3a500fL).optional(false).ordered(true).multiple(true).origin("5100489723071844370").done();
    b.aggregate("missingIndentNewLine", 0x46c894612c3b8eacL).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3a500fL).optional(false).ordered(true).multiple(true).origin("5100489723071925932").done();
    b.aggregate("missingIndentOnNewLine", 0x46c894612c3ce3daL).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3a500fL).optional(false).ordered(true).multiple(true).origin("5100489723072013274").done();
    b.aggregate("missingIndentNewLineChildren", 0x46c894612c3ce3e6L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3a500fL).optional(false).ordered(true).multiple(true).origin("5100489723072013286").done();
    b.aggregate("missingIndentLayoutIndent", 0x46c894612c3ec40eL).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3a500fL).optional(false).ordered(true).multiple(true).origin("5100489723072136206").done();
    b.aggregate("doc", 0x46c894612c3a50b0L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5ffL).optional(false).ordered(true).multiple(false).origin("5100489723071844528").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLettersWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "LettersWord", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e418b45b73L);
    b.class_(false, false, false);
    b.parent(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461c2L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6394025033533250419");
    b.version(2);
    b.property("lettersWord", 0x58bc23e418b45b77L).type(MetaIdFactory.dataTypeId(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e418b45b72L)).origin("6394025033533250423").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "Line", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x6409f53087b16c65L);
    b.class_(false, false, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/7208562267366976613");
    b.version(2);
    b.property("text", 0x6409f53087b16c6aL).type(PrimitiveTypeId.STRING).origin("7208562267366976618").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLogicalOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "LogicalOperator", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x6409f53087b6e726L);
    b.class_(false, true, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/7208562267367335718");
    b.version(2);
    b.property("left", 0x6409f53087b6e727L).type(PrimitiveTypeId.BOOLEAN).origin("7208562267367335719").done();
    b.property("right", 0x6409f53087b6e72aL).type(PrimitiveTypeId.BOOLEAN).origin("7208562267367335722").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMatchingBracesRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "MatchingBracesRoot", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c47243aL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723072685114");
    b.version(2);
    b.aggregate("doc", 0x46c894612c4b3cecL).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5ffL).optional(false).ordered(true).multiple(false).origin("5100489723072953580").done();
    b.aggregate("content", 0x46c894612c472444L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c47243dL).optional(true).ordered(true).multiple(true).origin("5100489723072685124").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNewLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "NewLine", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e418a205aeL);
    b.class_(false, false, false);
    b.parent(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461c2L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6394025033532048814");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNonBlockingTest() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "NonBlockingTest", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x366702a83bb05b81L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/3920104922228480897");
    b.version(2);
    b.property("asyncUpdated", 0x366702a83bb05b9aL).type(PrimitiveTypeId.STRING).origin("3920104922228480922").done();
    b.aggregate("doc", 0x366702a83bb05b82L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5ffL).optional(false).ordered(true).multiple(false).origin("3920104922228480898").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNumberWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "NumberWord", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e418893437L);
    b.class_(false, false, false);
    b.parent(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461c2L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6394025033530422327");
    b.version(2);
    b.property("number", 0x58bc23e41889343aL).type(MetaIdFactory.dataTypeId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10324579ea7L)).origin("6394025033530422330").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrLogicalOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "OrLogicalOperator", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c35ead1L);
    b.class_(false, false, false);
    b.super_("FluentEditor.structure.AndLogicalOperator", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c35ead0L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723071556305");
    b.version(2);
    b.alias("or");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForOrOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "OrOperator", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da102ccL);
    b.class_(false, false, false);
    b.super_("FluentEditor.structure.SubMenuOperator", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da102c5L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/7016667275740644044");
    b.version(2);
    b.alias("or");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrepend() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "Prepend", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x1571a790126e4614L);
    b.class_(false, false, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/1545200384391136788");
    b.version(2);
    b.property("prepend", 0x1571a790126e4615L).type(PrimitiveTypeId.STRING).origin("1545200384391136789").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPrependKeywordRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "PrependKeywordRoot", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x1571a790125ba484L);
    b.class_(false, false, true);
    b.parent(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11a3afa8c0dL);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/1545200384389915780");
    b.version(2);
    b.property("final", 0x1571a790125ba487L).type(PrimitiveTypeId.BOOLEAN).origin("1545200384389915783").done();
    b.property("implements", 0x1571a790126e4611L).type(PrimitiveTypeId.BOOLEAN).origin("1545200384391136785").done();
    b.aggregate("doc", 0x1571a790125ba489L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5ffL).optional(false).ordered(true).multiple(false).origin("1545200384389915785").done();
    b.aggregate("prepends", 0x1571a790126e558eL).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x1571a790126e4614L).optional(true).ordered(true).multiple(true).origin("1545200384391140750").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "Property", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3a500fL);
    b.class_(false, false, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723071844367");
    b.version(2);
    b.property("content", 0x46c894612c3a5010L).type(PrimitiveTypeId.STRING).origin("5100489723071844368").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPunctuation() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "Punctuation", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x366702a83bbb3bafL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/3920104922229193647");
    b.version(2);
    b.property("kind", 0x366702a83bbb3bb0L).type(MetaIdFactory.dataTypeId(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x366702a83bc0e3c7L)).origin("3920104922229193648").done();
    b.property("variant", 0x366702a83bbb3bb4L).type(PrimitiveTypeId.STRING).origin("3920104922229193652").done();
    b.property("withLeftA", 0x74842e525d37ffe1L).type(PrimitiveTypeId.STRING).origin("8395886536611594209").done();
    b.property("withLeftB", 0x74842e525d37ffe5L).type(PrimitiveTypeId.STRING).origin("8395886536611594213").done();
    b.property("withRightA", 0x74842e525d37ffeaL).type(PrimitiveTypeId.STRING).origin("8395886536611594218").done();
    b.property("withRightB", 0x74842e525d37fff0L).type(PrimitiveTypeId.STRING).origin("8395886536611594224").done();
    b.property("withoutA", 0x74842e525d37fff7L).type(PrimitiveTypeId.STRING).origin("8395886536611594231").done();
    b.property("withoutB", 0x74842e525d37ffffL).type(PrimitiveTypeId.STRING).origin("8395886536611594239").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRichTextRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "RichTextRoot", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461b1L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6394025033529057713");
    b.version(2);
    b.aggregate("doc", 0x58bc23e4188833b2L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5ffL).optional(false).ordered(true).multiple(false).origin("6394025033530356658").done();
    b.aggregate("lines", 0x58bc23e4187461dcL).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461b4L).optional(true).ordered(true).multiple(true).origin("6394025033529057756").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSimpleContent() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "SimpleContent", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c47243eL);
    b.class_(false, false, false);
    b.super_("FluentEditor.structure.Content", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c472441L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723072685118");
    b.version(2);
    b.property("content", 0x46c894612c47243fL).type(PrimitiveTypeId.STRING).origin("5100489723072685119").done();
    b.alias("simple content");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStringCollection() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "StringCollection", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c439b25L);
    b.class_(false, false, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723072453413");
    b.version(2);
    b.property("content", 0x46c894612c439b26L).type(PrimitiveTypeId.STRING).origin("5100489723072453414").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStructure() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "Structure", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3fb9e2L);
    b.class_(false, true, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723072199138");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubMenuExpression() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "SubMenuExpression", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da4c277L);
    b.class_(false, true, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/7016667275740889719");
    b.version(2);
    b.property("test", 0x3c8f388022df1dd5L).type(PrimitiveTypeId.STRING).origin("4363768686937316821").done();
    b.associate("word", 0x3c8f388022df211dL).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da102c4L).optional(false).origin("4363768686937317661").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubMenuOperand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "SubMenuOperand", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da4c278L);
    b.class_(false, true, false);
    b.super_("FluentEditor.structure.SubMenuExpression", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da4c277L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/7016667275740889720");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubMenuOperator() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "SubMenuOperator", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da102c5L);
    b.class_(false, true, false);
    b.super_("FluentEditor.structure.SubMenuExpression", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da4c277L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/7016667275740644037");
    b.version(2);
    b.aggregate("left", 0x616035b61da102c6L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da4c277L).optional(false).ordered(true).multiple(false).origin("7016667275740644038").done();
    b.aggregate("right", 0x616035b61da102c8L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da4c277L).optional(false).ordered(true).multiple(false).origin("7016667275740644040").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSubstitutionMenuRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "SubstitutionMenuRoot", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x5c4a3efb3aad474eL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6650197048508106574");
    b.version(2);
    b.aggregate("doc", 0x5c4a3efb3aad4752L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c37b5ffL).optional(false).ordered(true).multiple(false).origin("6650197048508106578").done();
    b.aggregate("expression", 0x616035b61da102d3L).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da4c277L).optional(false).ordered(true).multiple(false).origin("7016667275740644051").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSuperStructure() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "SuperStructure", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3fb9e9L);
    b.class_(false, false, false);
    b.super_("FluentEditor.structure.Structure", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x46c894612c3fb9e2L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/5100489723072199145");
    b.version(2);
    b.property("content", 0x46c894612c3fb9ecL).type(PrimitiveTypeId.STRING).origin("5100489723072199148").done();
    b.alias("super");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTextLine() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "TextLine", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461b8L);
    b.class_(false, false, false);
    b.parent(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461b4L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6394025033529057720");
    b.version(2);
    b.aggregate("words", 0x58bc23e4187461deL).target(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461c2L).optional(false).ordered(true).multiple(true).origin("6394025033529057758").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWord() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "Word", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461bcL);
    b.class_(false, false, false);
    b.parent(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x58bc23e4187461c2L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/6394025033529057724");
    b.version(2);
    b.property("word", 0x58bc23e4187461bdL).type(PrimitiveTypeId.STRING).origin("6394025033529057725").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWordOperand() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "WordOperand", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da102c4L);
    b.class_(false, false, false);
    b.super_("FluentEditor.structure.SubMenuOperand", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da4c278L);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/7016667275740644036");
    b.version(2);
    b.property("word", 0x616035b61da102d1L).type(MetaIdFactory.dataTypeId(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da102d0L)).origin("7016667275740644049").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWordThatIsWrapped() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("FluentEditor", "WordThatIsWrapped", 0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x3c8f388022e53b9cL);
    b.class_(false, false, false);
    b.origin("r:e9cab4a4-1bf0-44aa-8efc-e72f00f04711(FluentEditor.structure)/4363768686937717660");
    b.version(2);
    b.property("otherWord", 0x3c8f388022e53b9dL).type(MetaIdFactory.dataTypeId(0x2d38ea1d8ed2480eL, 0xa77f95b0aabfe4dfL, 0x616035b61da102d0L)).origin("4363768686937717661").done();
    return b.create();
  }
}
